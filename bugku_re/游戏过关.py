# -*- coding : utf-8 -*-

# v3 数组
v3 = [123, 32, 18, 98, 119, 108, 65, 41, 124, 80, 125,
      38, 124, 111, 74, 49, 83, 108, 94, 108, 84, 6, ]

# qmemcpy(v4, "`S,yhn _uec{", 12);
s4 = '`S,yhn _uec{'

# v4 数组下标12以后的赋值情况
v4 = [127, 119, 96, 48, 107, 71, 92, 29, 81,
      107, 90, 85, 64, 12, 43, 76, 86, 13, 114, 1, ]

# strcpy(v5, "u~");
s5 = 'u~'

# v3 v4 v5地址连续，直接拼接出来s3
s3 = ''
for i in v3:
    s3 += chr(i)
s3 += s4
for i in v4:
    s3 += chr(i)
s3 += s5

# v6数组
v6 = [18, 64, 98, 5, 2, 4, 6, 3, 6, 48, 49, 65, 32, 12,
      48, 65, 31, 78, 62, 32, 49, 32, 1, 57, 96, 3, 21, 9, 4,
      62, 3, 5, 4, 1, 2, 3, 44, 65, 78, 32, 16, 97, 54, 16, 44,
      52, 32, 64, 89, 45, 32, 65, 15, 34, 18, 16, 0, ]
# s6字符串
s6 = ''
for i in v6:
    s6 += chr(i)

# 核心算法
flag = ''
for i in range(56):
    temp = ord(s3[i]) ^ ord(s6[i])
    temp = temp ^ 0x13
    flag += chr(temp)
print(flag)
