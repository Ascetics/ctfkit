"""
在线工具地址
https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=yinyue
逆向工程得到加解密函数
目前支持：大小写字母、数字、常见可打印特殊字符；空白符支持：空格、\n
"""

# 经分析此为字符串结束符
end_indicator = '§='


def enc(string):
    enc_dic = {'A': '♭♭§', 'B': '♭♭∮', 'C': '♭♭♪', 'D': '♭♭♩', 'E': '♭♭♫',
               'F': '♭♭♬', 'G': '♭♭¶', 'H': '♭♯‖', 'I': '♭♯♭', 'J': '♭♯♯',
               'K': '♭♯§', 'L': '♭♯∮', 'M': '♭♯♪', 'N': '♭♯♩', 'O': '♭♯♫',
               'P': '‖¶♩', 'Q': '‖¶♫', 'R': '‖¶♬', 'S': '‖¶¶', 'T': '♭‖‖',
               'U': '♭‖♭', 'V': '♭‖♯', 'W': '♭‖§', 'X': '♭‖∮', 'Y': '♭‖♪',
               'Z': '♭‖♩', 'a': '‖♬♭', 'b': '‖♬♯', 'c': '‖♬§', 'd': '‖♬∮',
               'e': '‖♬♪', 'f': '‖♬♩', 'g': '‖♬♫', 'h': '‖♬♬', 'i': '‖♬¶',
               'j': '‖¶‖', 'k': '‖¶♭', 'l': '‖¶♯', 'm': '‖¶§', 'n': '‖¶∮',
               'o': '‖¶♪', 'p': '‖♩∮', 'q': '‖♩♪', 'r': '‖♩♩', 's': '‖♩♫',
               't': '‖♩♬', 'u': '‖♩¶', 'v': '‖♫‖', 'w': '‖♫♭', 'x': '‖♫♯',
               'y': '‖♫§', 'z': '‖♫∮', '0': '‖‖‖', '1': '‖‖♭', '2': '‖‖♯',
               '3': '‖‖§', '4': '‖‖∮', '5': '‖‖♪', '6': '‖‖♩', '7': '‖‖♫',
               '8': '‖‖♬', '9': '‖‖¶', '~': '‖♫♬', '!': '‖♭♫', '@': '♭♭♯',
               '#': '‖♭¶', '$': '‖♯‖', '%': '‖♯♭', '^': '♭♭‖', '&': '‖♯♯',
               '*': '‖♯♩', '(': '‖♯∮', ')': '‖♯♪', '_': '♭♭♭', '+': '‖♯♫',
               '`': '‖♬‖', '-': '‖♯¶', '=': '‖♭§', '[': '♭‖♫', ']': '♭‖¶',
               '\\': '♭‖♬', '{': '‖♫♪', '}': '‖♫♫', '|': '‖♫♩', ';': '‖♭♭',
               "'": '‖♯§', ':': '‖♭‖', '"': '‖♭♬', ',': '‖♯♬', '.': '‖§‖',
               '/': '‖§♭', '<': '‖♭♯', '>': '‖♭∮', '?': '‖♭♪', ' ': '‖♭♩',
               '\n': '‖♪♬'}
    result = []
    for i, c in enumerate(string):
        if enc_dic.get(c):
            result.append(enc_dic.get(c))
        else:
            print(i, c)
    return ''.join(result) + end_indicator


def dec(string):
    dec_dic = {'♭♭§': 'A', '♭♭∮': 'B', '♭♭♪': 'C', '♭♭♩': 'D', '♭♭♫': 'E',
               '♭♭♬': 'F', '♭♭¶': 'G', '♭♯‖': 'H', '♭♯♭': 'I', '♭♯♯': 'J',
               '♭♯§': 'K', '♭♯∮': 'L', '♭♯♪': 'M', '♭♯♩': 'N', '♭♯♫': 'O',
               '‖¶♩': 'P', '‖¶♫': 'Q', '‖¶♬': 'R', '‖¶¶': 'S', '♭‖‖': 'T',
               '♭‖♭': 'U', '♭‖♯': 'V', '♭‖§': 'W', '♭‖∮': 'X', '♭‖♪': 'Y',
               '♭‖♩': 'Z', '‖♬♭': 'a', '‖♬♯': 'b', '‖♬§': 'c', '‖♬∮': 'd',
               '‖♬♪': 'e', '‖♬♩': 'f', '‖♬♫': 'g', '‖♬♬': 'h', '‖♬¶': 'i',
               '‖¶‖': 'j', '‖¶♭': 'k', '‖¶♯': 'l', '‖¶§': 'm', '‖¶∮': 'n',
               '‖¶♪': 'o', '‖♩∮': 'p', '‖♩♪': 'q', '‖♩♩': 'r', '‖♩♫': 's',
               '‖♩♬': 't', '‖♩¶': 'u', '‖♫‖': 'v', '‖♫♭': 'w', '‖♫♯': 'x',
               '‖♫§': 'y', '‖♫∮': 'z', '‖‖‖': '0', '‖‖♭': '1', '‖‖♯': '2',
               '‖‖§': '3', '‖‖∮': '4', '‖‖♪': '5', '‖‖♩': '6', '‖‖♫': '7',
               '‖‖♬': '8', '‖‖¶': '9', '‖♫♬': '~', '‖♭♫': '!', '♭♭♯': '@',
               '‖♭¶': '#', '‖♯‖': '$', '‖♯♭': '%', '♭♭‖': '^', '‖♯♯': '&',
               '‖♯♩': '*', '‖♯∮': '(', '‖♯♪': ')', '♭♭♭': '_', '‖♯♫': '+',
               '‖♬‖': '`', '‖♯¶': '-', '‖♭§': '=', '♭‖♫': '[', '♭‖¶': ']',
               '♭‖♬': '\\', '‖♫♪': '{', '‖♫♫': '}', '‖♫♩': '|', '‖♭♭': ';',
               '‖♯§': "'", '‖♭‖': ':', '‖♭♬': '"', '‖♯♬': ',', '‖§‖': '.',
               '‖§♭': '/', '‖♭♯': '<', '‖♭∮': '>', '‖♭♪': '?', '‖♭♩': ' ',
               '‖♪♬': '\n'}
    result = []
    for i in range(0, len(string), 3):
        k = string[i:i + 3]
        if dec_dic.get(k):
            result.append(dec_dic.get(k))
        else:
            print(i, k)
    return ''.join(result)


if __name__ == '__main__':
    p = 'Today is a beautiful day. Wh@t a n1ce day!'
    c = enc(p)
    print(c)
    p = dec(c)
    print(p)
